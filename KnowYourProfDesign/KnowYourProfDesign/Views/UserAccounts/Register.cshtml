@model KnowYourProfDesign.Models.UserAccount

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}


    <head>


        <link rel="stylesheet" href=@Url.Content("~/Content/Custom_Login/Login/vendor/animate/animate.css")>
        <link rel="stylesheet" href=@Url.Content("~/Content/Custom_Login/Login/vendor/css-hamburgers/hamburgers.min.css")>
        <link rel="stylesheet" href=@Url.Content("~/Content/Custom_Login/Login/vendor/select2/select2.min.css")>
        <link rel="stylesheet" href=@Url.Content("~/Content/Custom_Login/Login/css/util.css")>
        <link rel="stylesheet" href=@Url.Content("~/Content/Custom_Login/Login/css/main.css")>





    </head>
    <body>

        <div class="limiter">
            <div class="container-login100">
                <div class="wrap-login100">
                    <div class="login100-pic js-tilt" data-tilt>
                        <img src="~/Content/Custom_Login/Login/images/img-01.png" alt="IMG">
                    </div>

                    @if (ViewBag.Message != null)
                    {
                        <div class="form-group">

                            <div class="text-center"><text>@ViewBag.Message</text></div>
                        </div>
                    }

                    else
                    { 




                    using (Html.BeginForm())
                    {

                        @*<form class="login100-form validate-form">*@
                        <span class="login100-form-title">
                            <text class="LoginText">Member Registration</text>
                        </span>



                        <div class="wrap-input100 validate-input">
                            @*<input class="input100" type="text" name="RegiName" placeholder="Name">*@

                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { placeholder = "Full Name", pattern = "[A-Za-z].{3,}", required = "required", @class = "input100" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                            <span class="symbol-input100">
                                <i class="fa fa-envelope" aria-hidden="true"></i>
                            </span>
                        </div>


                        <div class="wrap-input100 validate-input">
                            @*<input class="input100" type="text" name="RegiUsername" placeholder="Username">*@
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { placeholder = "Username", pattern = "[A-Za-z].{3,}", required = "required",  @class = "input100" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                            <span class="symbol-input100">
                                <i class="fa fa-envelope" aria-hidden="true"></i>
                            </span>
                        </div>








                        <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
                            @*<input class="input100" type="text" name="RegiEmail" placeholder="Email">*@
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "Email", required = "required", @class = "input100" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                            <span class="symbol-input100">
                                <i class="fa fa-envelope" aria-hidden="true"></i>
                            </span>
                        </div>

                        <div class="wrap-input100 validate-input" data-validate="Password is required">
                            @*<input class="input100" type="password" name="RegiPassword" placeholder="Password">*@
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { placeholder = "Password", required = "required", @class = "input100" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <span class="focus-input100"></span>
                            <span class="symbol-input100">
                                <i class="fa fa-lock" aria-hidden="true"></i>
                            </span>
                        </div>

                        <div class="container-login100-form-btn">
                            <button class="login100-form-btn LoginButton">
                                Sign Up
                            </button>
                        </div>
                        @*</form>*@
                    
                    }
                    }
                </div>
            </div>
        </div>





        <script src="@Url.Content("~/Content/Custom_Login/Login/vendor/jquery/jquery-3.2.1.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/Custom_Login/Login/vendor/bootstrap/js/popper.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/Custom_Login/Login/vendor/bootstrap/js/bootstrap.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/Custom_Login/Login/vendor/select2/select2.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/Custom_Login/vendor/tilt.jquery.min.js")" type="text/javascript"></script>

        <script>
            $('.js-tilt').tilt({
                scale: 1.1
            })
        </script>

        <script src="@Url.Content("~/Content/Custom_Login/Login/main.js")" type="text/javascript"></script>

    </body>



